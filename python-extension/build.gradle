plugins {
    id 'kotlin-multiplatform'
    id 'org.jetbrains.gradle.plugin.idea-ext'
}


import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

def cfg = project.buildSettings

def PYTHON_INCLUDE_PATH = cfg.python.python_include_path
def PYTHON_BIN_PATH = cfg.python.python_bin_path

task testBuildSettingsYml() {
    doLast {
        println PYTHON_BIN_PATH
        println PYTHON_INCLUDE_PATH
    }
}

def currentOs = DefaultNativePlatform.getCurrentOperatingSystem()

kotlin {
    if (PYTHON_INCLUDE_PATH != null) {
        if (currentOs.isMacOsX()) {
            macosX64() {
                binaries {
                    staticLib {
                        baseName = "datalore-plot-${project.name}"
                    }
                }

                compilations.main.cinterops {
                    python {
                        compilerOpts "-I${PYTHON_INCLUDE_PATH}"
                    }
                }
            }
        }

        if (currentOs.isLinux()) {
            linuxX64() {
                binaries {
                    sharedLib {
                        baseName = "datalore-plot-${project.name}"
                    }
                }

                compilations.main.cinterops {
                    python {
                        compilerOpts "-I${PYTHON_INCLUDE_PATH}"
                    }
                }
            }
        }
    } else {
        throw new GradleException('''
------------------------------------------------------------------------------------------------------
Python package build unavailable. Please set "python_include_path" property in build_settings.yml file.
------------------------------------------------------------------------------------------------------
''')
    }


    sourceSets {
        commonMain {
            dependencies {
                implementation kotlin('stdlib-common')

                // (!) only `portable` sources
                implementation project(':base-portable')
                implementation project(':plot-config-portable')
            }
        }
    }
}