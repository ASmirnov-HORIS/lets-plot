plugins {
    id 'kotlin-multiplatform'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow' version '5.1.0'
//    id 'java'
}

kotlin {
    jvm()

    sourceSets {
        commonMain {
            dependencies {
                api kotlin('stdlib-common')
                api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

                api project(':base-portable')
                api project(':base')
                api project(':mapper-core')
                api project(':vis-canvas')
                api project(':vis-svg')
                api project(':vis-svg-mapper')
                api project(':vis-svg-mapper-jfx')
                api project(':plot-base-portable')
                api project(':plot-base')
                api project(':plot-common-portable')
                api project(':plot-common')
                api project(':plot-builder-portable')
                api project(':plot-builder')
                api project(':plot-config-portable')
                api project(':plot-config')
                api project(':vis-demo-common')
                api project(':vis-demo-common-jfx')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
            }
        }
    }
}


def artifactBaseName = 'datalore-plot-jfx'
def artifactGroupId = project.group
def artifactVersion = project.version

def task_group = 'datalore plot'

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

// https://discuss.kotlinlang.org/t/how-to-publish-fat-jar-from-kotlin-multi-project-mpp/14520
// https://youtrack.jetbrains.com/issue/KT-25709
// https://discuss.kotlinlang.org/t/kotlin-1-3-m2-new-multiplatform-projects-model/9264/107
task jarDatalorePlotJvmJfxClasses(type: ShadowJar) {
    group task_group
    baseName artifactBaseName
    version artifactVersion
    configurations = [project.configurations.jvmRuntimeClasspath]

    exclude '**/*.kotlin_metadata'
    exclude '**/*.kotlin_module'
    exclude '**/*.kotlin_builtins'

//    relocate 'com', 'shade.com'
//    relocate 'org', 'shade.org'
//    relocate 'kotlin', 'shade.kotlin'
//    relocate 'mu', 'shade.mu'
}

task jarDatalorePlotJvmJfxSources(type: ShadowJar) {
    baseName artifactBaseName
    version artifactVersion
    classifier 'sources'
    configurations = [rootProject.configurations.datalorePlotJvmJfxSources]
}


publishing {
    publications {
        datalorePlotJvmJfx(MavenPublication) {
            groupId artifactGroupId
            artifactId artifactBaseName
            version artifactVersion

            artifact jarDatalorePlotJvmJfxClasses
        }
    }
    repositories {
        maven {
            // ToDo: url --> build_settings
            url = uri("$rootDir/.maven-publish-dev-repo")
        }
    }
}


//publishing {
//    publications {
//        forEach {
//            it.artifactId = it.artifactId.replace(project.name, 'datalore-plot') + '-jfx'
//        }
//    }
//}
