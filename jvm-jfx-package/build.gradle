plugins {
    id 'kotlin-multiplatform'
    id 'maven-publish'
//    id 'com.github.johnrengelman.shadow' version '5.1.0'
//    id 'java'
}

kotlin {
    jvm()

    sourceSets {
        commonMain {
            dependencies {
                api kotlin('stdlib-common')
                api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

                api project(':base-portable')
                api project(':base')
                api project(':mapper-core')
                api project(':visualization-base-canvas')
                api project(':visualization-base-svg')
                api project(':visualization-base-svg-mapper')
                api project(':visualization-base-svg-mapper-jfx')
                api project(':visualization-plot-base-portable')
                api project(':visualization-plot-base')
                api project(':visualization-plot-common-portable')
                api project(':visualization-plot-common')
                api project(':visualization-plot-builder-portable')
                api project(':visualization-plot-builder')
                api project(':plot-config-portable')
                api project(':plot-config')
                api project(':visualization-demo-common')
                api project(':visualization-demo-common-jfx')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
//                implementation "org.apache.commons:commons-math3:$math3_version"
            }
        }
    }
}


def artifactGroupId = 'org.jetbrains.datalore-plot'
def artifactBaseName = 'datalore-plot-jfx'
def artifactVersion = '0.0.1'

//import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

//task jvmJfxClassesAllJar(type: ShadowJar) {
//    baseName artifactBaseName
////    version artifactVersion
//    configurations = [project.configurations.jvmRuntimeClasspath]
//
////    relocate 'com', 'shade.com'
////    relocate 'org', 'shade.org'
////    relocate 'kotlin', 'shade.kotlin'
////    relocate 'mu', 'shade.mu'
//}

//// https://discuss.kotlinlang.org/t/kotlin-1-3-m2-new-multiplatform-projects-model/9264/107
//task jvmJfxClassesAllJar(type: ShadowJar) {
//    baseName artifactBaseName
////    version artifactVersion
//
//    def target = kotlin.targets.jvm
//    from target.compilations.main.output
//    def runtimeClasspath = target.compilations.main.runtimeDependencyFiles
//    configurations = [runtimeClasspath]
//}


//task jvmJfxSourcesAllJar(type: ShadowJar) {
//    baseName artifactBaseName
//    version artifactVersion
//    classifier 'sources'
//    configurations = [rootProject.configurations.datalorePlotJvmJfxSources]
//}


//publishing {
//    publications {
//        jvmJfx(MavenPublication) {
//            groupId artifactGroupId
//            artifactId artifactBaseName
////            version artifactVersion
//
//            artifact jvmJfxClassesAllJar
////            artifact jvmJfxSourcesAllJar
//        }
//    }
//    repositories {
//        maven {
//            url = uri("$rootDir/.maven-publish-dev-repo")
//        }
//    }
//}


publishing {
    publications {
        forEach {
            it.artifactId = it.artifactId.replace(project.name, 'datalore-plot') + '-jfx'
        }
    }
}
