plugins {
    id 'kotlin-multiplatform'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
    id "com.jfrog.bintray"
}

kotlin {
    jvm()

    sourceSets {
        commonMain {
            dependencies {
                api kotlin('stdlib-common')
                api "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

                api project(':base-portable')
                api project(':base')
//                api project(':mapper-core')
                api project(':vis-canvas')
                api project(':vis-svg')
//                api project(':vis-svg-mapper')
//                api project(':vis-svg-mapper-jfx')
                api project(':plot-base-portable')
                api project(':plot-base')
                api project(':plot-common-portable')
                api project(':plot-common')
                api project(':plot-builder-portable')
                api project(':plot-builder')
                api project(':plot-config-portable')
                api project(':plot-config')
//                api project(':vis-demo-common')
//                api project(':vis-demo-common-jfx')
            }
        }
        jvmMain {
            dependencies {
                implementation kotlin('stdlib-jdk8')
                // Enable logging to console (make sure it is jared)
                implementation "org.slf4j:slf4j-simple:$slf4j_version"
            }
        }
    }
}


def artifactBaseName = 'datalore-plot-common'
def artifactGroupId = project.group
def artifactVersion = project.version

def task_group = 'datalore plot'

/*
 * Copyright (c) 2019. JetBrains s.r.o.
 * Use of this source code is governed by the MIT license that can be found in the LICENSE file.
 */

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

// https://discuss.kotlinlang.org/t/how-to-publish-fat-jar-from-kotlin-multi-project-mpp/14520
// https://youtrack.jetbrains.com/issue/KT-25709
// https://discuss.kotlinlang.org/t/kotlin-1-3-m2-new-multiplatform-projects-model/9264/107
task jarDatalorePlotJvmCommonClasses(type: ShadowJar) {
    group task_group
    baseName artifactBaseName
    version artifactVersion
    configurations = [project.configurations.jvmRuntimeClasspath]

    exclude '**/*.kotlin_metadata'
    exclude '**/*.kotlin_module'
    exclude '**/*.kotlin_builtins'

//    relocate 'com', 'shade.com'
//    relocate 'org', 'shade.org'
//    relocate 'kotlin', 'shade.kotlin'
//    relocate 'mu', 'shade.mu'
}

task jarDatalorePlotJvmCommonSources(type: ShadowJar) {
    group task_group
    baseName artifactBaseName
    version artifactVersion
    classifier 'sources'
    configurations = [rootProject.configurations.datalorePlotJvmCommonSources]
}


publishing {
    publications {
        datalorePlotJvmCommon(MavenPublication) {
            groupId artifactGroupId
            artifactId artifactBaseName
            version artifactVersion

            artifact jarDatalorePlotJvmCommonClasses
            artifact jarDatalorePlotJvmCommonSources

            pom {
                name = "Datalore Plot common classes"
                description = "Datalore Plot JVM package without rendering part"
                url = "https://github.com/JetBrains/datalore-plot"
                licenses {
                    license {
                        name = "MIT"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }
                developers {
                    developer {
                        id = "jetbrains"
                        name = "JetBrains"
                        email = "datalore-plot@jetbrains.com"
                    }
                }
                scm {
                    url = "https://github.com/JetBrains/datalore-plot"
                }
            }
        }
    }
    repositories {
        maven {
//            url = uri("$rootDir/.maven-publish-dev-repo")
            url = uri("https://jetbrains.bintray.com/datalore-plot-maven")
        }
    }
}

// Provide Bintray-specific Information
def bintray_user = project.buildSettings?.bintray?.user
def bintray_key = project.buildSettings?.bintray?.key

if (bintray_user != null && bintray_key != null) {
    bintray {
        user = bintray_user
        key = bintray_key
        publications = ['datalorePlotJvmCommon']
        publish = true
        override = true
        
        pkg {
            repo = 'datalore-plot-maven'
            name = 'datalore-plot-jars'
            userOrg = 'jetbrains'
            licenses = ['MIT']
            vcsUrl = 'https://github.com/JetBrains/datalore-plot'
            version {
                name = artifactVersion
            }
        }
    }
}
